---
/* eslint-disable-next-line import/no-unresolved */
import { getCollection, getEntry } from "astro:content";
import type { InferGetStaticPropsType } from "astro";
import { article } from "styled-system/recipes";
import Layout from "@/layout/index.astro";
import YouTube from "@/components/youtube.astro";
import { dateString } from "@/utils";
import BlockHeader from "@/components/block-header.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("post", ({ data }) =>
    import.meta.env.PROD ? data.draft !== true : true,
  );

  return allPosts
    .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
    .map((post, index, arr) => {
      const left = index !== 0 ? arr[index - 1] : null;
      const right = index !== arr.length - 1 ? arr[index + 1] : null;

      return {
        params: {
          slug: post.slug,
        },
        props: {
          post,
          left,
          right,
        },
      };
    });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props;
const entry = await getEntry("post", post.slug);
const { title, date } = await entry.data;
const { Content } = await entry.render();
---

<Layout
  title={post.data.title}
>
  <BlockHeader title={title}>
    <p slot="bottom">{dateString(date)}</p>
  </BlockHeader>
  <div class={article()}>
    <Content components={{ YouTube }} />
  </div>
</Layout>
