---
/* eslint-disable-next-line import/no-unresolved */
import { ViewTransitions } from "astro:transitions";
import { css } from "styled-system/css";
import { container, flex, vstack } from "styled-system/patterns";
import { siteMetadata } from "@/data";
import Header from "./header.astro";
import Footer from "./footer.astro";
import Menu from "./menu.astro";
import Drawer from "./drawer.astro";
import Fab from "./fab.astro";
import "./index.css";

interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="favicon.svg" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} | {siteMetadata.title}</title>
    <ViewTransitions />
  </head>
  <body>
    <div class={flex({ direction: "column", gap: "md" })}>
      <Header />
      <main
        class={container({
          width: "full",
          maxWidth: "container",
          p: 0,
        })}
      >
        <div class={flex({ gap: "md", alignItems: "start" })}>
          <article
            class={vstack({
              gap: "md",
              alignItems: "stretch",
              bg: "bg.canvas",
              rounded: "md",
              flexGrow: 1,
              overflow: "hidden",
            })}
          >
            <slot />
          </article>
          <div
            class={vstack({
              display: { base: "flex", mdDown: "none" },
              gap: "md",
              alignItems: "stretch",
              bg: "bg.canvas",
              width: "320px",
              flexShrink: 0,
              p: "md",
              rounded: "md",
              position: "sticky",
              top: "calc(56px + {spacing.md})",
            })}
          >
            <slot name="sidebar-top" />
            <Menu />
          </div>
        </div>
      </main>
      <Footer />
      <div
        class={css({
          display: { base: "none", mdDown: "block" },
          position: "fixed",
          bottom: "md",
          right: "md",
          zIndex: "fab",
        })}
      >
        <Fab />
      </div>
      <Drawer siteTitle={siteMetadata.title}>
        <Menu />
      </Drawer>
    </div>
    <script>
      import "@/scripts/color-mode.ts";
    </script>
    <script is:inline>
      function setDarkMode() {
        const theme = (() => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          }
          return "light";
        })();

        if (theme === "light") {
          document.documentElement.classList.remove("dark");
        } else {
          document.documentElement.classList.add("dark");
        }

        window.localStorage.setItem("theme", theme);
      }

      setDarkMode();
      document.addEventListener("astro:after-swap", setDarkMode);
    </script>
  </body>
</html>
